//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3074.
// 
namespace Sp.Data.WS {

    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ListsSoap", Namespace = "http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Lists : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        /// <remarks/>
        public Lists()
        {
            this.Timeout = 200000000;
            this.Url = "http://testintranet/crm/_vti_bin/Lists.asmx";
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetList", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetList(string listName)
        {
            object[] results = this.Invoke("GetList", new object[] {
                        listName});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetList(string listName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetList", new object[] {
                        listName}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListAndView", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListAndView(string listName, string viewName)
        {
            object[] results = this.Invoke("GetListAndView", new object[] {
                        listName,
                        viewName});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListAndView(string listName, string viewName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListAndView", new object[] {
                        listName,
                        viewName}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListAndView(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteList", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteList(string listName)
        {
            this.Invoke("DeleteList", new object[] {
                        listName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteList(string listName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteList", new object[] {
                        listName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDeleteList(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/AddList", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddList(string listName, string description, int templateID)
        {
            object[] results = this.Invoke("AddList", new object[] {
                        listName,
                        description,
                        templateID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddList(string listName, string description, int templateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddList", new object[] {
                        listName,
                        description,
                        templateID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndAddList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/AddListFromFeature", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddListFromFeature(string listName, string description, System.Guid featureID, int templateID)
        {
            object[] results = this.Invoke("AddListFromFeature", new object[] {
                        listName,
                        description,
                        featureID,
                        templateID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddListFromFeature(string listName, string description, System.Guid featureID, int templateID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddListFromFeature", new object[] {
                        listName,
                        description,
                        featureID,
                        templateID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndAddListFromFeature(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateList", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateList(string listName, System.Xml.XmlNode listProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string listVersion)
        {
            object[] results = this.Invoke("UpdateList", new object[] {
                        listName,
                        listProperties,
                        newFields,
                        updateFields,
                        deleteFields,
                        listVersion});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateList(string listName, System.Xml.XmlNode listProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string listVersion, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateList", new object[] {
                        listName,
                        listProperties,
                        newFields,
                        updateFields,
                        deleteFields,
                        listVersion}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndUpdateList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListCollection", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListCollection()
        {
            object[] results = this.Invoke("GetListCollection", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListCollection(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListCollection", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListCollection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListItems", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListItems(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string webID)
        {
            object[] results = this.Invoke("GetListItems", new object[] {
                        listName,
                        viewName,
                        query,
                        viewFields,
                        rowLimit,
                        queryOptions,
                        webID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListItems(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string webID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListItems", new object[] {
                        listName,
                        viewName,
                        query,
                        viewFields,
                        rowLimit,
                        queryOptions,
                        webID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListItems(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListItemChanges", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListItemChanges(string listName, System.Xml.XmlNode viewFields, string since, System.Xml.XmlNode contains)
        {
            object[] results = this.Invoke("GetListItemChanges", new object[] {
                        listName,
                        viewFields,
                        since,
                        contains});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListItemChanges(string listName, System.Xml.XmlNode viewFields, string since, System.Xml.XmlNode contains, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListItemChanges", new object[] {
                        listName,
                        viewFields,
                        since,
                        contains}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListItemChanges(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesSinceToken", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListItemChangesSinceToken(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string changeToken, System.Xml.XmlNode contains)
        {
            object[] results = this.Invoke("GetListItemChangesSinceToken", new object[] {
                        listName,
                        viewName,
                        query,
                        viewFields,
                        rowLimit,
                        queryOptions,
                        changeToken,
                        contains});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListItemChangesSinceToken(string listName, string viewName, System.Xml.XmlNode query, System.Xml.XmlNode viewFields, string rowLimit, System.Xml.XmlNode queryOptions, string changeToken, System.Xml.XmlNode contains, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListItemChangesSinceToken", new object[] {
                        listName,
                        viewName,
                        query,
                        viewFields,
                        rowLimit,
                        queryOptions,
                        changeToken,
                        contains}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListItemChangesSinceToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateListItems", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateListItems(string listName, System.Xml.XmlNode updates)
        {
            object[] results = this.Invoke("UpdateListItems", new object[] {
                        listName,
                        updates});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateListItems(string listName, System.Xml.XmlNode updates, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateListItems", new object[] {
                        listName,
                        updates}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndUpdateListItems(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/AddDiscussionBoardItem", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddDiscussionBoardItem(string listName, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] message)
        {
            object[] results = this.Invoke("AddDiscussionBoardItem", new object[] {
                        listName,
                        message});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddDiscussionBoardItem(string listName, byte[] message, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddDiscussionBoardItem", new object[] {
                        listName,
                        message}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndAddDiscussionBoardItem(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetVersionCollection", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetVersionCollection(string strlistID, string strlistItemID, string strFieldName)
        {
            object[] results = this.Invoke("GetVersionCollection", new object[] {
                        strlistID,
                        strlistItemID,
                        strFieldName});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetVersionCollection(string strlistID, string strlistItemID, string strFieldName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetVersionCollection", new object[] {
                        strlistID,
                        strlistItemID,
                        strFieldName}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetVersionCollection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/AddAttachment", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAttachment(string listName, string listItemID, string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] attachment)
        {
            object[] results = this.Invoke("AddAttachment", new object[] {
                        listName,
                        listItemID,
                        fileName,
                        attachment});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddAttachment(string listName, string listItemID, string fileName, byte[] attachment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddAttachment", new object[] {
                        listName,
                        listItemID,
                        fileName,
                        attachment}, callback, asyncState);
        }

        /// <remarks/>
        public string EndAddAttachment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetAttachmentCollection", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAttachmentCollection(string listName, string listItemID)
        {
            object[] results = this.Invoke("GetAttachmentCollection", new object[] {
                        listName,
                        listItemID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAttachmentCollection(string listName, string listItemID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAttachmentCollection", new object[] {
                        listName,
                        listItemID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAttachmentCollection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteAttachment", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttachment(string listName, string listItemID, string url)
        {
            this.Invoke("DeleteAttachment", new object[] {
                        listName,
                        listItemID,
                        url});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteAttachment(string listName, string listItemID, string url, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteAttachment", new object[] {
                        listName,
                        listItemID,
                        url}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDeleteAttachment(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CheckOutFile", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOutFile(string pageUrl, string checkoutToLocal, string lastmodified)
        {
            object[] results = this.Invoke("CheckOutFile", new object[] {
                        pageUrl,
                        checkoutToLocal,
                        lastmodified});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckOutFile(string pageUrl, string checkoutToLocal, string lastmodified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckOutFile", new object[] {
                        pageUrl,
                        checkoutToLocal,
                        lastmodified}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCheckOutFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UndoCheckOut", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UndoCheckOut(string pageUrl)
        {
            object[] results = this.Invoke("UndoCheckOut", new object[] {
                        pageUrl});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUndoCheckOut(string pageUrl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UndoCheckOut", new object[] {
                        pageUrl}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUndoCheckOut(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CheckInFile", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckInFile(string pageUrl, string comment, string CheckinType)
        {
            object[] results = this.Invoke("CheckInFile", new object[] {
                        pageUrl,
                        comment,
                        CheckinType});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckInFile(string pageUrl, string comment, string CheckinType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckInFile", new object[] {
                        pageUrl,
                        comment,
                        CheckinType}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCheckInFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListContentTypes", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListContentTypes(string listName, string contentTypeId)
        {
            object[] results = this.Invoke("GetListContentTypes", new object[] {
                        listName,
                        contentTypeId});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListContentTypes(string listName, string contentTypeId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListContentTypes", new object[] {
                        listName,
                        contentTypeId}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListContentTypes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListContentType(string listName, string contentTypeId)
        {
            object[] results = this.Invoke("GetListContentType", new object[] {
                        listName,
                        contentTypeId});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListContentType(string listName, string contentTypeId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListContentType", new object[] {
                        listName,
                        contentTypeId}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetListContentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CreateContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateContentType(string listName, string displayName, string parentType, System.Xml.XmlNode fields, System.Xml.XmlNode contentTypeProperties, string addToView)
        {
            object[] results = this.Invoke("CreateContentType", new object[] {
                        listName,
                        displayName,
                        parentType,
                        fields,
                        contentTypeProperties,
                        addToView});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreateContentType(string listName, string displayName, string parentType, System.Xml.XmlNode fields, System.Xml.XmlNode contentTypeProperties, string addToView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateContentType", new object[] {
                        listName,
                        displayName,
                        parentType,
                        fields,
                        contentTypeProperties,
                        addToView}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCreateContentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateContentType(string listName, string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string addToView)
        {
            object[] results = this.Invoke("UpdateContentType", new object[] {
                        listName,
                        contentTypeId,
                        contentTypeProperties,
                        newFields,
                        updateFields,
                        deleteFields,
                        addToView});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateContentType(string listName, string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, string addToView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateContentType", new object[] {
                        listName,
                        contentTypeId,
                        contentTypeProperties,
                        newFields,
                        updateFields,
                        deleteFields,
                        addToView}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndUpdateContentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteContentType(string listName, string contentTypeId)
        {
            object[] results = this.Invoke("DeleteContentType", new object[] {
                        listName,
                        contentTypeId});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteContentType(string listName, string contentTypeId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteContentType", new object[] {
                        listName,
                        contentTypeId}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndDeleteContentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateContentTypeXmlDocument(string listName, string contentTypeId, System.Xml.XmlNode newDocument)
        {
            object[] results = this.Invoke("UpdateContentTypeXmlDocument", new object[] {
                        listName,
                        contentTypeId,
                        newDocument});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateContentTypeXmlDocument(string listName, string contentTypeId, System.Xml.XmlNode newDocument, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateContentTypeXmlDocument", new object[] {
                        listName,
                        contentTypeId,
                        newDocument}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndUpdateContentTypeXmlDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypesXmlDocument", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateContentTypesXmlDocument(string listName, System.Xml.XmlNode newDocument)
        {
            object[] results = this.Invoke("UpdateContentTypesXmlDocument", new object[] {
                        listName,
                        newDocument});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateContentTypesXmlDocument(string listName, System.Xml.XmlNode newDocument, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateContentTypesXmlDocument", new object[] {
                        listName,
                        newDocument}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndUpdateContentTypesXmlDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteContentTypeXmlDocument", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteContentTypeXmlDocument(string listName, string contentTypeId, string documentUri)
        {
            object[] results = this.Invoke("DeleteContentTypeXmlDocument", new object[] {
                        listName,
                        contentTypeId,
                        documentUri});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteContentTypeXmlDocument(string listName, string contentTypeId, string documentUri, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteContentTypeXmlDocument", new object[] {
                        listName,
                        contentTypeId,
                        documentUri}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndDeleteContentTypeXmlDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/ApplyContentTypeToList", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ApplyContentTypeToList(string webUrl, string contentTypeId, string listName)
        {
            object[] results = this.Invoke("ApplyContentTypeToList", new object[] {
                        webUrl,
                        contentTypeId,
                        listName});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginApplyContentTypeToList(string webUrl, string contentTypeId, string listName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ApplyContentTypeToList", new object[] {
                        webUrl,
                        contentTypeId,
                        listName}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndApplyContentTypeToList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
    }
}
